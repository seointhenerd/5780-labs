ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.SetEnable,"ax",%progbits
  19              		.align	1
  20              		.global	SetEnable
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	SetEnable:
  26              	.LFB43:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Seoin Kim
   4:Src/main.c    ****   * u1324614
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 2


  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** #include "stm32f072xb.h"
  47:Src/main.c    **** #include <stdbool.h>
  48:Src/main.c    **** #include <stdio.h>
  49:Src/main.c    **** #include <stdlib.h>
  50:Src/main.c    **** void _Error_Handler(char * file, int line);
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PV */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** void SystemClock_Config(void);
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE BEGIN PFP */
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Setup Functions */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END PFP */
  72:Src/main.c    **** void SetEnable()
  73:Src/main.c    **** {
  27              		.loc 1 73 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  74:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
  32              		.loc 1 74 3 view .LVU1
  33              		.loc 1 74 6 is_stmt 0 view .LVU2
  34 0000 0A4B     		ldr	r3, .L2
  35 0002 5969     		ldr	r1, [r3, #20]
  36              		.loc 1 74 15 view .LVU3
  37 0004 8022     		movs	r2, #128
  38 0006 9202     		lsls	r2, r2, #10
  39 0008 0A43     		orrs	r2, r1
  40 000a 5A61     		str	r2, [r3, #20]
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 3


  41              		.loc 1 75 3 is_stmt 1 view .LVU4
  42              		.loc 1 75 6 is_stmt 0 view .LVU5
  43 000c 5969     		ldr	r1, [r3, #20]
  44              		.loc 1 75 15 view .LVU6
  45 000e 8022     		movs	r2, #128
  46 0010 1203     		lsls	r2, r2, #12
  47 0012 0A43     		orrs	r2, r1
  48 0014 5A61     		str	r2, [r3, #20]
  76:Src/main.c    ****   RCC->APB2ENR |= RCC_APB2ENR_ADCEN;
  49              		.loc 1 76 3 is_stmt 1 view .LVU7
  50              		.loc 1 76 6 is_stmt 0 view .LVU8
  51 0016 9969     		ldr	r1, [r3, #24]
  52              		.loc 1 76 16 view .LVU9
  53 0018 8022     		movs	r2, #128
  54 001a 9200     		lsls	r2, r2, #2
  55 001c 0A43     		orrs	r2, r1
  56 001e 9A61     		str	r2, [r3, #24]
  77:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_DACEN;
  57              		.loc 1 77 3 is_stmt 1 view .LVU10
  58              		.loc 1 77 6 is_stmt 0 view .LVU11
  59 0020 D969     		ldr	r1, [r3, #28]
  60              		.loc 1 77 16 view .LVU12
  61 0022 8022     		movs	r2, #128
  62 0024 9205     		lsls	r2, r2, #22
  63 0026 0A43     		orrs	r2, r1
  64 0028 DA61     		str	r2, [r3, #28]
  78:Src/main.c    **** }
  65              		.loc 1 78 1 view .LVU13
  66              		@ sp needed
  67 002a 7047     		bx	lr
  68              	.L3:
  69              		.align	2
  70              	.L2:
  71 002c 00100240 		.word	1073876992
  72              		.cfi_endproc
  73              	.LFE43:
  75              		.section	.text.InitializeLEDPins,"ax",%progbits
  76              		.align	1
  77              		.global	InitializeLEDPins
  78              		.syntax unified
  79              		.code	16
  80              		.thumb_func
  82              	InitializeLEDPins:
  83              	.LFB44:
  79:Src/main.c    **** 
  80:Src/main.c    **** void InitializeLEDPins()
  81:Src/main.c    **** {
  84              		.loc 1 81 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 24
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88 0000 00B5     		push	{lr}
  89              	.LCFI0:
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 14, -4
  92 0002 87B0     		sub	sp, sp, #28
  93              	.LCFI1:
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 4


  94              		.cfi_def_cfa_offset 32
  82:Src/main.c    ****   GPIO_InitTypeDef initStr = {GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9,
  95              		.loc 1 82 3 view .LVU15
  96              		.loc 1 82 20 is_stmt 0 view .LVU16
  97 0004 1422     		movs	r2, #20
  98 0006 0021     		movs	r1, #0
  99 0008 01A8     		add	r0, sp, #4
 100 000a FFF7FEFF 		bl	memset
 101              	.LVL0:
 102 000e F023     		movs	r3, #240
 103 0010 9B00     		lsls	r3, r3, #2
 104 0012 0193     		str	r3, [sp, #4]
 105 0014 0123     		movs	r3, #1
 106 0016 0293     		str	r3, [sp, #8]
  83:Src/main.c    ****                               GPIO_MODE_OUTPUT_PP,
  84:Src/main.c    ****                               GPIO_SPEED_FREQ_LOW,
  85:Src/main.c    ****                               GPIO_NOPULL};
  86:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &initStr);
 107              		.loc 1 86 3 is_stmt 1 view .LVU17
 108 0018 01A9     		add	r1, sp, #4
 109 001a 0248     		ldr	r0, .L5
 110 001c FFF7FEFF 		bl	HAL_GPIO_Init
 111              	.LVL1:
  87:Src/main.c    **** }
 112              		.loc 1 87 1 is_stmt 0 view .LVU18
 113 0020 07B0     		add	sp, sp, #28
 114              		@ sp needed
 115 0022 00BD     		pop	{pc}
 116              	.L6:
 117              		.align	2
 118              	.L5:
 119 0024 00080048 		.word	1207961600
 120              		.cfi_endproc
 121              	.LFE44:
 123              		.section	.text.Calibration,"ax",%progbits
 124              		.align	1
 125              		.global	Calibration
 126              		.syntax unified
 127              		.code	16
 128              		.thumb_func
 130              	Calibration:
 131              	.LFB45:
  88:Src/main.c    **** 
  89:Src/main.c    **** void Calibration()
  90:Src/main.c    **** {
 132              		.loc 1 90 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
  91:Src/main.c    ****   /* (1) Ensure that ADEN = 0 */
  92:Src/main.c    ****   /* (2) Clear ADEN by setting ADDIS*/
  93:Src/main.c    ****   /* (3) Clear DMAEN */
  94:Src/main.c    ****   /* (4) Launch the calibration by setting ADCAL */
  95:Src/main.c    ****   /* (5) Wait until ADCAL=0 */
  96:Src/main.c    ****   if ((ADC1->CR & ADC_CR_ADEN) != 0) /* (1) */ {
 137              		.loc 1 96 3 view .LVU20
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 5


 138              		.loc 1 96 12 is_stmt 0 view .LVU21
 139 0000 0D4B     		ldr	r3, .L13
 140 0002 9B68     		ldr	r3, [r3, #8]
 141              		.loc 1 96 6 view .LVU22
 142 0004 DB07     		lsls	r3, r3, #31
 143 0006 04D5     		bpl	.L9
  97:Src/main.c    ****     ADC1->CR |= ADC_CR_ADDIS; /* (2) */
 144              		.loc 1 97 5 is_stmt 1 view .LVU23
 145              		.loc 1 97 9 is_stmt 0 view .LVU24
 146 0008 0B4A     		ldr	r2, .L13
 147 000a 9368     		ldr	r3, [r2, #8]
 148              		.loc 1 97 14 view .LVU25
 149 000c 0221     		movs	r1, #2
 150 000e 0B43     		orrs	r3, r1
 151 0010 9360     		str	r3, [r2, #8]
 152              	.L9:
  98:Src/main.c    ****   }
  99:Src/main.c    ****   while ((ADC1->CR & ADC_CR_ADEN) != 0);
 153              		.loc 1 99 35 is_stmt 1 discriminator 1 view .LVU26
 154              		.loc 1 99 15 is_stmt 0 discriminator 1 view .LVU27
 155 0012 094B     		ldr	r3, .L13
 156 0014 9B68     		ldr	r3, [r3, #8]
 157              		.loc 1 99 35 discriminator 1 view .LVU28
 158 0016 DB07     		lsls	r3, r3, #31
 159 0018 FBD4     		bmi	.L9
 100:Src/main.c    ****   ADC1->CFGR1 &= ~ADC_CFGR1_DMAEN; /* (3) */
 160              		.loc 1 100 3 is_stmt 1 view .LVU29
 161              		.loc 1 100 7 is_stmt 0 view .LVU30
 162 001a 074B     		ldr	r3, .L13
 163 001c DA68     		ldr	r2, [r3, #12]
 164              		.loc 1 100 15 view .LVU31
 165 001e 0121     		movs	r1, #1
 166 0020 8A43     		bics	r2, r1
 167 0022 DA60     		str	r2, [r3, #12]
 101:Src/main.c    ****   ADC1->CR |= ADC_CR_ADCAL; /* (4) */
 168              		.loc 1 101 3 is_stmt 1 view .LVU32
 169              		.loc 1 101 7 is_stmt 0 view .LVU33
 170 0024 9968     		ldr	r1, [r3, #8]
 171              		.loc 1 101 12 view .LVU34
 172 0026 8022     		movs	r2, #128
 173 0028 1206     		lsls	r2, r2, #24
 174 002a 0A43     		orrs	r2, r1
 175 002c 9A60     		str	r2, [r3, #8]
 102:Src/main.c    ****   while ((ADC1->CR & ADC_CR_ADCAL) != 0); /* (5) */
 176              		.loc 1 102 3 is_stmt 1 view .LVU35
 177              	.L10:
 178              		.loc 1 102 36 discriminator 1 view .LVU36
 179              		.loc 1 102 15 is_stmt 0 discriminator 1 view .LVU37
 180 002e 024B     		ldr	r3, .L13
 181 0030 9B68     		ldr	r3, [r3, #8]
 182              		.loc 1 102 36 discriminator 1 view .LVU38
 183 0032 002B     		cmp	r3, #0
 184 0034 FBDB     		blt	.L10
 103:Src/main.c    **** }
 185              		.loc 1 103 1 view .LVU39
 186              		@ sp needed
 187 0036 7047     		bx	lr
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 6


 188              	.L14:
 189              		.align	2
 190              	.L13:
 191 0038 00240140 		.word	1073816576
 192              		.cfi_endproc
 193              	.LFE45:
 195              		.section	.text.EnableADC,"ax",%progbits
 196              		.align	1
 197              		.global	EnableADC
 198              		.syntax unified
 199              		.code	16
 200              		.thumb_func
 202              	EnableADC:
 203              	.LFB46:
 104:Src/main.c    **** 
 105:Src/main.c    **** void EnableADC()
 106:Src/main.c    **** {
 204              		.loc 1 106 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 107:Src/main.c    ****   /* Enable the ADC */
 108:Src/main.c    ****   /* (1) Ensure that ADRDY = 0 */
 109:Src/main.c    ****   /* (2) Clear ADRDY */
 110:Src/main.c    ****   /* (3) Enable the ADC */
 111:Src/main.c    ****   /* (4) Wait until ADC ready */
 112:Src/main.c    ****   if (ADC1->ISR & ADC_ISR_ADRDY) /* (1) */ {
 209              		.loc 1 112 3 view .LVU41
 210              		.loc 1 112 11 is_stmt 0 view .LVU42
 211 0000 094B     		ldr	r3, .L20
 212 0002 1B68     		ldr	r3, [r3]
 213              		.loc 1 112 6 view .LVU43
 214 0004 DB07     		lsls	r3, r3, #31
 215 0006 04D5     		bpl	.L16
 113:Src/main.c    ****     ADC1->ISR |= ADC_ISR_ADRDY; /* (2) */
 216              		.loc 1 113 5 is_stmt 1 view .LVU44
 217              		.loc 1 113 9 is_stmt 0 view .LVU45
 218 0008 074A     		ldr	r2, .L20
 219 000a 1368     		ldr	r3, [r2]
 220              		.loc 1 113 15 view .LVU46
 221 000c 0121     		movs	r1, #1
 222 000e 0B43     		orrs	r3, r1
 223 0010 1360     		str	r3, [r2]
 224              	.L16:
 114:Src/main.c    ****   }
 115:Src/main.c    ****   ADC1->CR |= ADC_CR_ADEN; /* (3) */
 225              		.loc 1 115 3 is_stmt 1 view .LVU47
 226              		.loc 1 115 7 is_stmt 0 view .LVU48
 227 0012 054A     		ldr	r2, .L20
 228 0014 9368     		ldr	r3, [r2, #8]
 229              		.loc 1 115 12 view .LVU49
 230 0016 0121     		movs	r1, #1
 231 0018 0B43     		orrs	r3, r1
 232 001a 9360     		str	r3, [r2, #8]
 116:Src/main.c    ****   while (!(ADC1->ISR & ADC_ISR_ADRDY)); /* (4) */    
 233              		.loc 1 116 3 is_stmt 1 view .LVU50
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 7


 234              	.L17:
 235              		.loc 1 116 10 discriminator 1 view .LVU51
 236              		.loc 1 116 16 is_stmt 0 discriminator 1 view .LVU52
 237 001c 024B     		ldr	r3, .L20
 238 001e 1B68     		ldr	r3, [r3]
 239              		.loc 1 116 10 discriminator 1 view .LVU53
 240 0020 DB07     		lsls	r3, r3, #31
 241 0022 FBD5     		bpl	.L17
 117:Src/main.c    **** }
 242              		.loc 1 117 1 view .LVU54
 243              		@ sp needed
 244 0024 7047     		bx	lr
 245              	.L21:
 246 0026 C046     		.align	2
 247              	.L20:
 248 0028 00240140 		.word	1073816576
 249              		.cfi_endproc
 250              	.LFE46:
 252              		.section	.text.SetLEDSByADC,"ax",%progbits
 253              		.align	1
 254              		.global	SetLEDSByADC
 255              		.syntax unified
 256              		.code	16
 257              		.thumb_func
 259              	SetLEDSByADC:
 260              	.LFB47:
 118:Src/main.c    **** 
 119:Src/main.c    **** void SetLEDSByADC()
 120:Src/main.c    **** {
 261              		.loc 1 120 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 10B5     		push	{r4, lr}
 266              	.LCFI2:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 4, -8
 269              		.cfi_offset 14, -4
 121:Src/main.c    ****   int threshold1 = 0;
 270              		.loc 1 121 3 view .LVU56
 271              	.LVL2:
 122:Src/main.c    ****   int threshold2 = 63;
 272              		.loc 1 122 3 view .LVU57
 123:Src/main.c    ****   int threshold3 = 127;
 273              		.loc 1 123 3 view .LVU58
 124:Src/main.c    ****   int threshold4 = 255;
 274              		.loc 1 124 3 view .LVU59
 125:Src/main.c    **** 
 126:Src/main.c    ****   // Reset all LEDs
 127:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 275              		.loc 1 127 3 view .LVU60
 276 0002 F021     		movs	r1, #240
 277 0004 0022     		movs	r2, #0
 278 0006 8900     		lsls	r1, r1, #2
 279 0008 2848     		ldr	r0, .L31
 280 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 281              	.LVL3:
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 8


 128:Src/main.c    **** 
 129:Src/main.c    ****   if (ADC1->DR > threshold1 && ADC1->DR <= threshold2) {
 282              		.loc 1 129 3 view .LVU61
 283              		.loc 1 129 11 is_stmt 0 view .LVU62
 284 000e 284B     		ldr	r3, .L31+4
 285 0010 1B6C     		ldr	r3, [r3, #64]
 286              		.loc 1 129 6 view .LVU63
 287 0012 002B     		cmp	r3, #0
 288 0014 03D0     		beq	.L23
 289              		.loc 1 129 36 discriminator 1 view .LVU64
 290 0016 264B     		ldr	r3, .L31+4
 291 0018 1B6C     		ldr	r3, [r3, #64]
 292              		.loc 1 129 29 discriminator 1 view .LVU65
 293 001a 3F2B     		cmp	r3, #63
 294 001c 1AD9     		bls	.L28
 295              	.L23:
 130:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_SET);
 131:Src/main.c    ****   }
 132:Src/main.c    ****   else if (ADC1->DR > threshold2 && ADC1->DR <= threshold3) {
 296              		.loc 1 132 8 is_stmt 1 view .LVU66
 297              		.loc 1 132 16 is_stmt 0 view .LVU67
 298 001e 244B     		ldr	r3, .L31+4
 299 0020 1B6C     		ldr	r3, [r3, #64]
 300              		.loc 1 132 11 view .LVU68
 301 0022 3F2B     		cmp	r3, #63
 302 0024 03D9     		bls	.L25
 303              		.loc 1 132 41 discriminator 1 view .LVU69
 304 0026 224B     		ldr	r3, .L31+4
 305 0028 1B6C     		ldr	r3, [r3, #64]
 306              		.loc 1 132 34 discriminator 1 view .LVU70
 307 002a 7F2B     		cmp	r3, #127
 308 002c 18D9     		bls	.L29
 309              	.L25:
 133:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 134:Src/main.c    ****   }
 135:Src/main.c    ****   else if (ADC1->DR > threshold3 && ADC1->DR <= threshold4) {
 310              		.loc 1 135 8 is_stmt 1 view .LVU71
 311              		.loc 1 135 16 is_stmt 0 view .LVU72
 312 002e 204B     		ldr	r3, .L31+4
 313 0030 1B6C     		ldr	r3, [r3, #64]
 314              		.loc 1 135 11 view .LVU73
 315 0032 7F2B     		cmp	r3, #127
 316 0034 03D9     		bls	.L26
 317              		.loc 1 135 41 discriminator 1 view .LVU74
 318 0036 1E4B     		ldr	r3, .L31+4
 319 0038 1B6C     		ldr	r3, [r3, #64]
 320              		.loc 1 135 34 discriminator 1 view .LVU75
 321 003a FF2B     		cmp	r3, #255
 322 003c 16D9     		bls	.L30
 323              	.L26:
 136:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET);
 137:Src/main.c    ****   }
 138:Src/main.c    ****   else if (ADC1->DR > threshold4) {
 324              		.loc 1 138 8 is_stmt 1 view .LVU76
 325              		.loc 1 138 16 is_stmt 0 view .LVU77
 326 003e 1C4B     		ldr	r3, .L31+4
 327 0040 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 9


 328              		.loc 1 138 11 view .LVU78
 329 0042 FF2B     		cmp	r3, #255
 330 0044 19D9     		bls	.L27
 139:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET);
 331              		.loc 1 139 5 is_stmt 1 view .LVU79
 332 0046 8021     		movs	r1, #128
 333 0048 0122     		movs	r2, #1
 334 004a 8900     		lsls	r1, r1, #2
 335 004c 1748     		ldr	r0, .L31
 336 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 337              	.LVL4:
 338              	.L22:
 140:Src/main.c    ****   }
 141:Src/main.c    ****   else {
 142:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_SET);
 143:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 144:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET);
 145:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET);
 146:Src/main.c    ****   }
 147:Src/main.c    **** }
 339              		.loc 1 147 1 is_stmt 0 view .LVU80
 340              		@ sp needed
 341 0052 10BD     		pop	{r4, pc}
 342              	.L28:
 130:Src/main.c    ****   }
 343              		.loc 1 130 5 is_stmt 1 view .LVU81
 344 0054 0122     		movs	r2, #1
 345 0056 4021     		movs	r1, #64
 346 0058 1448     		ldr	r0, .L31
 347 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 348              	.LVL5:
 349 005e F8E7     		b	.L22
 350              	.L29:
 133:Src/main.c    ****   }
 351              		.loc 1 133 5 view .LVU82
 352 0060 0122     		movs	r2, #1
 353 0062 8021     		movs	r1, #128
 354 0064 1148     		ldr	r0, .L31
 355 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 356              	.LVL6:
 357 006a F2E7     		b	.L22
 358              	.L30:
 136:Src/main.c    ****   }
 359              		.loc 1 136 5 view .LVU83
 360 006c 8021     		movs	r1, #128
 361 006e 0122     		movs	r2, #1
 362 0070 4900     		lsls	r1, r1, #1
 363 0072 0E48     		ldr	r0, .L31
 364 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 365              	.LVL7:
 366 0078 EBE7     		b	.L22
 367              	.L27:
 142:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 368              		.loc 1 142 5 view .LVU84
 369 007a 0C4C     		ldr	r4, .L31
 370 007c 0122     		movs	r2, #1
 371 007e 4021     		movs	r1, #64
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 10


 372 0080 2000     		movs	r0, r4
 373 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 374              	.LVL8:
 143:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET);
 375              		.loc 1 143 5 view .LVU85
 376 0086 0122     		movs	r2, #1
 377 0088 8021     		movs	r1, #128
 378 008a 2000     		movs	r0, r4
 379 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 380              	.LVL9:
 144:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET);
 381              		.loc 1 144 5 view .LVU86
 382 0090 8021     		movs	r1, #128
 383 0092 0122     		movs	r2, #1
 384 0094 4900     		lsls	r1, r1, #1
 385 0096 2000     		movs	r0, r4
 386 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 387              	.LVL10:
 145:Src/main.c    ****   }
 388              		.loc 1 145 5 view .LVU87
 389 009c 8021     		movs	r1, #128
 390 009e 0122     		movs	r2, #1
 391 00a0 8900     		lsls	r1, r1, #2
 392 00a2 2000     		movs	r0, r4
 393 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 394              	.LVL11:
 395              		.loc 1 147 1 is_stmt 0 view .LVU88
 396 00a8 D3E7     		b	.L22
 397              	.L32:
 398 00aa C046     		.align	2
 399              	.L31:
 400 00ac 00080048 		.word	1207961600
 401 00b0 00240140 		.word	1073816576
 402              		.cfi_endproc
 403              	.LFE47:
 405              		.section	.text._Error_Handler,"ax",%progbits
 406              		.align	1
 407              		.global	_Error_Handler
 408              		.syntax unified
 409              		.code	16
 410              		.thumb_func
 412              	_Error_Handler:
 413              	.LFB50:
 148:Src/main.c    **** /* USER CODE BEGIN 0 */
 149:Src/main.c    **** 
 150:Src/main.c    **** /* USER CODE END 0 */
 151:Src/main.c    **** 
 152:Src/main.c    **** int main(void) 
 153:Src/main.c    **** {
 154:Src/main.c    ****   HAL_Init(); // Reset of all peripherals, init the Flash and Systick
 155:Src/main.c    ****   SystemClock_Config(); //Configure the system clock
 156:Src/main.c    **** 
 157:Src/main.c    ****   /****************************************** 
 158:Src/main.c    ****   6.1 Measuring a Potentiometer With the ADC 
 159:Src/main.c    ****   *******************************************/
 160:Src/main.c    ****   // 1. Initialize the LED pins to output.
 161:Src/main.c    ****   SetEnable();
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 11


 162:Src/main.c    ****   InitializeLEDPins();
 163:Src/main.c    **** 
 164:Src/main.c    ****   // 2. Select a GPIO pin to use as the ADC input. (PC0)
 165:Src/main.c    ****   // Configure to Analog mode
 166:Src/main.c    ****   GPIOC->MODER |= (GPIO_MODER_MODER0_1 | GPIO_MODER_MODER0_0);
 167:Src/main.c    ****   // No pull-up, pull-down
 168:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR0_1 | GPIO_PUPDR_PUPDR0_0);
 169:Src/main.c    **** 
 170:Src/main.c    ****   // 4. Configure the ADC.
 171:Src/main.c    ****   // 8-bit resolution
 172:Src/main.c    ****   ADC1->CFGR1 |= ADC_CFGR1_RES_1;
 173:Src/main.c    ****   ADC1->CFGR1 &= ~ADC_CFGR1_RES_0;
 174:Src/main.c    ****   // Continuous conversion mode
 175:Src/main.c    ****   ADC1->CFGR1 |= ADC_CFGR1_CONT;
 176:Src/main.c    ****   // Hardware triggers disabled
 177:Src/main.c    ****   ADC1->CFGR1 &= ~ADC_CFGR1_EXTEN;
 178:Src/main.c    **** 
 179:Src/main.c    ****   // 5. Select/enable the input pin’s channel for ADC conversion.
 180:Src/main.c    ****   ADC1->CHSELR |= ADC_CHSELR_CHSEL10;
 181:Src/main.c    **** 
 182:Src/main.c    ****   // 6. Perform a self-calibration, enable, and start the ADC.
 183:Src/main.c    ****     Calibration();
 184:Src/main.c    ****     EnableADC();
 185:Src/main.c    ****     // Start ADC.
 186:Src/main.c    ****     ADC1->CR |= ADC_CR_ADSTART;
 187:Src/main.c    **** 
 188:Src/main.c    ****   /************************************
 189:Src/main.c    ****   6.2 Generating Waveforms with the DAC
 190:Src/main.c    ****   *************************************/
 191:Src/main.c    ****   // 1. Select a GPIO pin to use as the DAC output (PA4)
 192:Src/main.c    ****   // Configure to Analog mode
 193:Src/main.c    ****   GPIOA->MODER |= (GPIO_MODER_MODER4_1 | GPIO_MODER_MODER4_0);
 194:Src/main.c    ****   // No pull-up, pull-down
 195:Src/main.c    ****   GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPDR4_1 | GPIO_PUPDR_PUPDR4_0);
 196:Src/main.c    ****   
 197:Src/main.c    ****   // 2. Set the used DAC channel to software trigger mode
 198:Src/main.c    ****   DAC1->CR |= (DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | DAC_CR_TSEL1_0);
 199:Src/main.c    **** 
 200:Src/main.c    ****   // 3. Enable the used DAC channel
 201:Src/main.c    ****   DAC1->CR |= DAC_CR_TEN1;
 202:Src/main.c    ****   DAC1->CR |= DAC_CR_EN1;
 203:Src/main.c    **** 
 204:Src/main.c    ****   // 4. Copy one of the wave-tables in figure 6.8 into your application.
 205:Src/main.c    ****   // Sine Wave: 8-bit, 32 samples/cycle
 206:Src/main.c    ****   const uint8_t sine_table[32] = {127,151,175,197,216,232,244,251,254,251,244,
 207:Src/main.c    ****   232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 208:Src/main.c    **** 
 209:Src/main.c    ****   // 5. In the main application loop, use an index variable to write the next value in the wave-tab
 210:Src/main.c    ****   // to the appropriate DAC data register.
 211:Src/main.c    ****   while (1) {
 212:Src/main.c    ****     /* Part 1*/
 213:Src/main.c    ****     SetLEDSByADC();
 214:Src/main.c    ****     // /* Part 2 */
 215:Src/main.c    ****     // for (int i = 0; i < 32; i++) {
 216:Src/main.c    ****     //   DAC1->DHR8R1 = sine_table[i];
 217:Src/main.c    ****     //   DAC1->SWTRIGR = DAC_SWTRIGR_SWTRIG1;
 218:Src/main.c    ****     //   // 6. Use a 1ms delay between updating the DAC to new values.
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 12


 219:Src/main.c    ****     //   HAL_Delay(1);
 220:Src/main.c    ****     // }
 221:Src/main.c    ****   }
 222:Src/main.c    **** }
 223:Src/main.c    **** 
 224:Src/main.c    **** /** System Clock Configuration
 225:Src/main.c    **** */
 226:Src/main.c    **** void SystemClock_Config(void)
 227:Src/main.c    **** {
 228:Src/main.c    **** 
 229:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 230:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 231:Src/main.c    **** 
 232:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 233:Src/main.c    ****     */
 234:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 235:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 236:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 237:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 238:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 239:Src/main.c    ****   {
 240:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 241:Src/main.c    ****   }
 242:Src/main.c    **** 
 243:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 244:Src/main.c    ****     */
 245:Src/main.c    ****   RCC_ClkInitStruct.ClockType =  RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |RCC_CLOCKTYPE_PCLK1;
 246:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 247:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 248:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 249:Src/main.c    **** 
 250:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 251:Src/main.c    ****   {
 252:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 253:Src/main.c    ****   }
 254:Src/main.c    **** 
 255:Src/main.c    ****     /**Configure the Systick interrupt time
 256:Src/main.c    ****     */
 257:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 258:Src/main.c    **** 
 259:Src/main.c    ****     /**Configure the Systick
 260:Src/main.c    ****     */
 261:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 264:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 265:Src/main.c    **** }
 266:Src/main.c    **** 
 267:Src/main.c    **** /* USER CODE BEGIN 4 */
 268:Src/main.c    **** 
 269:Src/main.c    **** /* USER CODE END 4 */
 270:Src/main.c    **** 
 271:Src/main.c    **** /**
 272:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 273:Src/main.c    ****   * @param  None
 274:Src/main.c    ****   * @retval None
 275:Src/main.c    ****   */
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 13


 276:Src/main.c    **** void _Error_Handler(char * file, int line)
 277:Src/main.c    **** {
 414              		.loc 1 277 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ Volatile: function does not return.
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 420              	.LVL12:
 421              	.L34:
 278:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 279:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 280:Src/main.c    ****   while(1)
 422              		.loc 1 280 3 view .LVU90
 281:Src/main.c    ****   {
 282:Src/main.c    ****   }
 423              		.loc 1 282 3 view .LVU91
 280:Src/main.c    ****   {
 424              		.loc 1 280 8 view .LVU92
 425 0000 FEE7     		b	.L34
 426              		.cfi_endproc
 427              	.LFE50:
 429              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 430              		.align	2
 431              	.LC0:
 432 0000 5372632F 		.ascii	"Src/main.c\000"
 432      6D61696E 
 432      2E6300
 433              		.global	__aeabi_uidiv
 434              		.section	.text.SystemClock_Config,"ax",%progbits
 435              		.align	1
 436              		.global	SystemClock_Config
 437              		.syntax unified
 438              		.code	16
 439              		.thumb_func
 441              	SystemClock_Config:
 442              	.LFB49:
 227:Src/main.c    **** 
 443              		.loc 1 227 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 72
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447 0000 00B5     		push	{lr}
 448              	.LCFI3:
 449              		.cfi_def_cfa_offset 4
 450              		.cfi_offset 14, -4
 451 0002 93B0     		sub	sp, sp, #76
 452              	.LCFI4:
 453              		.cfi_def_cfa_offset 80
 229:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 454              		.loc 1 229 3 view .LVU94
 230:Src/main.c    **** 
 455              		.loc 1 230 3 view .LVU95
 234:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 456              		.loc 1 234 3 view .LVU96
 234:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 457              		.loc 1 234 36 is_stmt 0 view .LVU97
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 14


 458 0004 0223     		movs	r3, #2
 459 0006 0593     		str	r3, [sp, #20]
 235:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 460              		.loc 1 235 3 is_stmt 1 view .LVU98
 235:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 461              		.loc 1 235 30 is_stmt 0 view .LVU99
 462 0008 013B     		subs	r3, r3, #1
 463 000a 0893     		str	r3, [sp, #32]
 236:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 464              		.loc 1 236 3 is_stmt 1 view .LVU100
 236:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 465              		.loc 1 236 41 is_stmt 0 view .LVU101
 466 000c 0F33     		adds	r3, r3, #15
 467 000e 0993     		str	r3, [sp, #36]
 237:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 468              		.loc 1 237 3 is_stmt 1 view .LVU102
 237:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 469              		.loc 1 237 34 is_stmt 0 view .LVU103
 470 0010 0023     		movs	r3, #0
 471 0012 0E93     		str	r3, [sp, #56]
 238:Src/main.c    ****   {
 472              		.loc 1 238 3 is_stmt 1 view .LVU104
 238:Src/main.c    ****   {
 473              		.loc 1 238 7 is_stmt 0 view .LVU105
 474 0014 05A8     		add	r0, sp, #20
 475 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 476              	.LVL13:
 238:Src/main.c    ****   {
 477              		.loc 1 238 6 discriminator 1 view .LVU106
 478 001a 0028     		cmp	r0, #0
 479 001c 1ED1     		bne	.L38
 245:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 480              		.loc 1 245 3 is_stmt 1 view .LVU107
 245:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 481              		.loc 1 245 31 is_stmt 0 view .LVU108
 482 001e 0723     		movs	r3, #7
 483 0020 0193     		str	r3, [sp, #4]
 246:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 484              		.loc 1 246 3 is_stmt 1 view .LVU109
 246:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 485              		.loc 1 246 34 is_stmt 0 view .LVU110
 486 0022 0023     		movs	r3, #0
 487 0024 0293     		str	r3, [sp, #8]
 247:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 488              		.loc 1 247 3 is_stmt 1 view .LVU111
 247:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 489              		.loc 1 247 35 is_stmt 0 view .LVU112
 490 0026 0393     		str	r3, [sp, #12]
 248:Src/main.c    **** 
 491              		.loc 1 248 3 is_stmt 1 view .LVU113
 248:Src/main.c    **** 
 492              		.loc 1 248 36 is_stmt 0 view .LVU114
 493 0028 0493     		str	r3, [sp, #16]
 250:Src/main.c    ****   {
 494              		.loc 1 250 3 is_stmt 1 view .LVU115
 250:Src/main.c    ****   {
 495              		.loc 1 250 7 is_stmt 0 view .LVU116
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 15


 496 002a 0021     		movs	r1, #0
 497 002c 01A8     		add	r0, sp, #4
 498 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 499              	.LVL14:
 250:Src/main.c    ****   {
 500              		.loc 1 250 6 discriminator 1 view .LVU117
 501 0032 0028     		cmp	r0, #0
 502 0034 16D1     		bne	.L39
 257:Src/main.c    **** 
 503              		.loc 1 257 3 is_stmt 1 view .LVU118
 257:Src/main.c    **** 
 504              		.loc 1 257 22 is_stmt 0 view .LVU119
 505 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 506              	.LVL15:
 257:Src/main.c    **** 
 507              		.loc 1 257 3 discriminator 1 view .LVU120
 508 003a FA21     		movs	r1, #250
 509 003c 8900     		lsls	r1, r1, #2
 510 003e FFF7FEFF 		bl	__aeabi_uidiv
 511              	.LVL16:
 512 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 513              	.LVL17:
 261:Src/main.c    **** 
 514              		.loc 1 261 3 is_stmt 1 view .LVU121
 515 0046 0420     		movs	r0, #4
 516 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 517              	.LVL18:
 264:Src/main.c    **** }
 518              		.loc 1 264 3 view .LVU122
 519 004c 0120     		movs	r0, #1
 520 004e 0022     		movs	r2, #0
 521 0050 0021     		movs	r1, #0
 522 0052 4042     		rsbs	r0, r0, #0
 523 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 524              	.LVL19:
 265:Src/main.c    **** 
 525              		.loc 1 265 1 is_stmt 0 view .LVU123
 526 0058 13B0     		add	sp, sp, #76
 527              		@ sp needed
 528 005a 00BD     		pop	{pc}
 529              	.L38:
 240:Src/main.c    ****   }
 530              		.loc 1 240 5 is_stmt 1 view .LVU124
 531 005c 0348     		ldr	r0, .L40
 532 005e F021     		movs	r1, #240
 533 0060 FFF7FEFF 		bl	_Error_Handler
 534              	.LVL20:
 535              	.L39:
 252:Src/main.c    ****   }
 536              		.loc 1 252 5 view .LVU125
 537 0064 0148     		ldr	r0, .L40
 538 0066 FC21     		movs	r1, #252
 539 0068 FFF7FEFF 		bl	_Error_Handler
 540              	.LVL21:
 541              	.L41:
 542              		.align	2
 543              	.L40:
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 16


 544 006c 00000000 		.word	.LC0
 545              		.cfi_endproc
 546              	.LFE49:
 548              		.section	.text.main,"ax",%progbits
 549              		.align	1
 550              		.global	main
 551              		.syntax unified
 552              		.code	16
 553              		.thumb_func
 555              	main:
 556              	.LFB48:
 153:Src/main.c    ****   HAL_Init(); // Reset of all peripherals, init the Flash and Systick
 557              		.loc 1 153 1 view -0
 558              		.cfi_startproc
 559              		@ Volatile: function does not return.
 560              		@ args = 0, pretend = 0, frame = 32
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562 0000 30B5     		push	{r4, r5, lr}
 563              	.LCFI5:
 564              		.cfi_def_cfa_offset 12
 565              		.cfi_offset 4, -12
 566              		.cfi_offset 5, -8
 567              		.cfi_offset 14, -4
 568 0002 89B0     		sub	sp, sp, #36
 569              	.LCFI6:
 570              		.cfi_def_cfa_offset 48
 154:Src/main.c    ****   SystemClock_Config(); //Configure the system clock
 571              		.loc 1 154 3 view .LVU127
 572 0004 FFF7FEFF 		bl	HAL_Init
 573              	.LVL22:
 155:Src/main.c    **** 
 574              		.loc 1 155 3 view .LVU128
 575 0008 FFF7FEFF 		bl	SystemClock_Config
 576              	.LVL23:
 161:Src/main.c    ****   InitializeLEDPins();
 577              		.loc 1 161 3 view .LVU129
 578 000c FFF7FEFF 		bl	SetEnable
 579              	.LVL24:
 162:Src/main.c    **** 
 580              		.loc 1 162 3 view .LVU130
 581 0010 FFF7FEFF 		bl	InitializeLEDPins
 582              	.LVL25:
 166:Src/main.c    ****   // No pull-up, pull-down
 583              		.loc 1 166 3 view .LVU131
 166:Src/main.c    ****   // No pull-up, pull-down
 584              		.loc 1 166 8 is_stmt 0 view .LVU132
 585 0014 254B     		ldr	r3, .L44
 586 0016 1A68     		ldr	r2, [r3]
 166:Src/main.c    ****   // No pull-up, pull-down
 587              		.loc 1 166 16 view .LVU133
 588 0018 0321     		movs	r1, #3
 589 001a 0A43     		orrs	r2, r1
 590 001c 1A60     		str	r2, [r3]
 168:Src/main.c    **** 
 591              		.loc 1 168 3 is_stmt 1 view .LVU134
 168:Src/main.c    **** 
 592              		.loc 1 168 8 is_stmt 0 view .LVU135
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 17


 593 001e DA68     		ldr	r2, [r3, #12]
 168:Src/main.c    **** 
 594              		.loc 1 168 16 view .LVU136
 595 0020 8A43     		bics	r2, r1
 596 0022 DA60     		str	r2, [r3, #12]
 172:Src/main.c    ****   ADC1->CFGR1 &= ~ADC_CFGR1_RES_0;
 597              		.loc 1 172 3 is_stmt 1 view .LVU137
 172:Src/main.c    ****   ADC1->CFGR1 &= ~ADC_CFGR1_RES_0;
 598              		.loc 1 172 7 is_stmt 0 view .LVU138
 599 0024 224C     		ldr	r4, .L44+4
 600 0026 E368     		ldr	r3, [r4, #12]
 172:Src/main.c    ****   ADC1->CFGR1 &= ~ADC_CFGR1_RES_0;
 601              		.loc 1 172 15 view .LVU139
 602 0028 1022     		movs	r2, #16
 603 002a 1343     		orrs	r3, r2
 604 002c E360     		str	r3, [r4, #12]
 173:Src/main.c    ****   // Continuous conversion mode
 605              		.loc 1 173 3 is_stmt 1 view .LVU140
 173:Src/main.c    ****   // Continuous conversion mode
 606              		.loc 1 173 7 is_stmt 0 view .LVU141
 607 002e E368     		ldr	r3, [r4, #12]
 173:Src/main.c    ****   // Continuous conversion mode
 608              		.loc 1 173 15 view .LVU142
 609 0030 083A     		subs	r2, r2, #8
 610 0032 9343     		bics	r3, r2
 611 0034 E360     		str	r3, [r4, #12]
 175:Src/main.c    ****   // Hardware triggers disabled
 612              		.loc 1 175 3 is_stmt 1 view .LVU143
 175:Src/main.c    ****   // Hardware triggers disabled
 613              		.loc 1 175 7 is_stmt 0 view .LVU144
 614 0036 E268     		ldr	r2, [r4, #12]
 175:Src/main.c    ****   // Hardware triggers disabled
 615              		.loc 1 175 15 view .LVU145
 616 0038 8023     		movs	r3, #128
 617 003a 9B01     		lsls	r3, r3, #6
 618 003c 1343     		orrs	r3, r2
 619 003e E360     		str	r3, [r4, #12]
 177:Src/main.c    **** 
 620              		.loc 1 177 3 is_stmt 1 view .LVU146
 177:Src/main.c    **** 
 621              		.loc 1 177 7 is_stmt 0 view .LVU147
 622 0040 E368     		ldr	r3, [r4, #12]
 177:Src/main.c    **** 
 623              		.loc 1 177 15 view .LVU148
 624 0042 1C4A     		ldr	r2, .L44+8
 625 0044 1340     		ands	r3, r2
 626 0046 E360     		str	r3, [r4, #12]
 180:Src/main.c    **** 
 627              		.loc 1 180 3 is_stmt 1 view .LVU149
 180:Src/main.c    **** 
 628              		.loc 1 180 7 is_stmt 0 view .LVU150
 629 0048 A26A     		ldr	r2, [r4, #40]
 180:Src/main.c    **** 
 630              		.loc 1 180 16 view .LVU151
 631 004a 8023     		movs	r3, #128
 632 004c DB00     		lsls	r3, r3, #3
 633 004e 1343     		orrs	r3, r2
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 18


 634 0050 A362     		str	r3, [r4, #40]
 183:Src/main.c    ****     EnableADC();
 635              		.loc 1 183 5 is_stmt 1 view .LVU152
 636 0052 FFF7FEFF 		bl	Calibration
 637              	.LVL26:
 184:Src/main.c    ****     // Start ADC.
 638              		.loc 1 184 5 view .LVU153
 639 0056 FFF7FEFF 		bl	EnableADC
 640              	.LVL27:
 186:Src/main.c    **** 
 641              		.loc 1 186 5 view .LVU154
 186:Src/main.c    **** 
 642              		.loc 1 186 9 is_stmt 0 view .LVU155
 643 005a A368     		ldr	r3, [r4, #8]
 186:Src/main.c    **** 
 644              		.loc 1 186 14 view .LVU156
 645 005c 0421     		movs	r1, #4
 646 005e 0B43     		orrs	r3, r1
 647 0060 A360     		str	r3, [r4, #8]
 193:Src/main.c    ****   // No pull-up, pull-down
 648              		.loc 1 193 3 is_stmt 1 view .LVU157
 193:Src/main.c    ****   // No pull-up, pull-down
 649              		.loc 1 193 8 is_stmt 0 view .LVU158
 650 0062 9023     		movs	r3, #144
 651 0064 DB05     		lsls	r3, r3, #23
 652 0066 1868     		ldr	r0, [r3]
 193:Src/main.c    ****   // No pull-up, pull-down
 653              		.loc 1 193 16 view .LVU159
 654 0068 C022     		movs	r2, #192
 655 006a 9200     		lsls	r2, r2, #2
 656 006c 0243     		orrs	r2, r0
 657 006e 1A60     		str	r2, [r3]
 195:Src/main.c    ****   
 658              		.loc 1 195 3 is_stmt 1 view .LVU160
 195:Src/main.c    ****   
 659              		.loc 1 195 8 is_stmt 0 view .LVU161
 660 0070 DA68     		ldr	r2, [r3, #12]
 195:Src/main.c    ****   
 661              		.loc 1 195 16 view .LVU162
 662 0072 1148     		ldr	r0, .L44+12
 663 0074 0240     		ands	r2, r0
 664 0076 DA60     		str	r2, [r3, #12]
 198:Src/main.c    **** 
 665              		.loc 1 198 3 is_stmt 1 view .LVU163
 198:Src/main.c    **** 
 666              		.loc 1 198 7 is_stmt 0 view .LVU164
 667 0078 104B     		ldr	r3, .L44+16
 668 007a 1A68     		ldr	r2, [r3]
 198:Src/main.c    **** 
 669              		.loc 1 198 12 view .LVU165
 670 007c 3820     		movs	r0, #56
 671 007e 0243     		orrs	r2, r0
 672 0080 1A60     		str	r2, [r3]
 201:Src/main.c    ****   DAC1->CR |= DAC_CR_EN1;
 673              		.loc 1 201 3 is_stmt 1 view .LVU166
 201:Src/main.c    ****   DAC1->CR |= DAC_CR_EN1;
 674              		.loc 1 201 7 is_stmt 0 view .LVU167
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 19


 675 0082 1A68     		ldr	r2, [r3]
 201:Src/main.c    ****   DAC1->CR |= DAC_CR_EN1;
 676              		.loc 1 201 12 view .LVU168
 677 0084 0A43     		orrs	r2, r1
 678 0086 1A60     		str	r2, [r3]
 202:Src/main.c    **** 
 679              		.loc 1 202 3 is_stmt 1 view .LVU169
 202:Src/main.c    **** 
 680              		.loc 1 202 7 is_stmt 0 view .LVU170
 681 0088 1A68     		ldr	r2, [r3]
 202:Src/main.c    **** 
 682              		.loc 1 202 12 view .LVU171
 683 008a 0339     		subs	r1, r1, #3
 684 008c 0A43     		orrs	r2, r1
 685 008e 1A60     		str	r2, [r3]
 206:Src/main.c    ****   232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 686              		.loc 1 206 3 is_stmt 1 view .LVU172
 206:Src/main.c    ****   232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 687              		.loc 1 206 17 is_stmt 0 view .LVU173
 688 0090 6946     		mov	r1, sp
 689 0092 0B4A     		ldr	r2, .L44+20
 690 0094 1300     		movs	r3, r2
 691 0096 31CB     		ldmia	r3!, {r0, r4, r5}
 692 0098 31C1     		stmia	r1!, {r0, r4, r5}
 693 009a 1A00     		movs	r2, r3
 694 009c 0B00     		movs	r3, r1
 695 009e 13CA     		ldmia	r2!, {r0, r1, r4}
 696 00a0 13C3     		stmia	r3!, {r0, r1, r4}
 697 00a2 03CA     		ldmia	r2!, {r0, r1}
 698 00a4 03C3     		stmia	r3!, {r0, r1}
 699              	.L43:
 211:Src/main.c    ****     /* Part 1*/
 700              		.loc 1 211 3 is_stmt 1 view .LVU174
 213:Src/main.c    ****     // /* Part 2 */
 701              		.loc 1 213 5 discriminator 1 view .LVU175
 702 00a6 FFF7FEFF 		bl	SetLEDSByADC
 703              	.LVL28:
 211:Src/main.c    ****     /* Part 1*/
 704              		.loc 1 211 9 view .LVU176
 705 00aa FCE7     		b	.L43
 706              	.L45:
 707              		.align	2
 708              	.L44:
 709 00ac 00080048 		.word	1207961600
 710 00b0 00240140 		.word	1073816576
 711 00b4 FFF3FFFF 		.word	-3073
 712 00b8 FFFCFFFF 		.word	-769
 713 00bc 00740040 		.word	1073771520
 714 00c0 00000000 		.word	.LANCHOR0
 715              		.cfi_endproc
 716              	.LFE48:
 718              		.section	.rodata
 719              		.align	2
 720              		.set	.LANCHOR0,. + 0
 721              	.LC2:
 722 0000 7F97AFC5 		.ascii	"\177\227\257\305\330\350\364\373\376\373\364\350\330"
 722      D8E8F4FB 
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 20


 722      FEFBF4E8 
 722      D8
 723 000d C5AF977F 		.ascii	"\305\257\227\177fN8%\025\011\002\000\002\011\025%8N"
 723      664E3825 
 723      15090200 
 723      02091525 
 723      384E
 724 001f 66       		.ascii	"f"
 725              		.text
 726              	.Letext0:
 727              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 728              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 729              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 730              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 731              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 732              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 733              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 734              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 735              		.file 10 "<built-in>"
ARM GAS  /var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:19     .text.SetEnable:00000000 $t
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:25     .text.SetEnable:00000000 SetEnable
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:71     .text.SetEnable:0000002c $d
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:76     .text.InitializeLEDPins:00000000 $t
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:82     .text.InitializeLEDPins:00000000 InitializeLEDPins
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:119    .text.InitializeLEDPins:00000024 $d
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:124    .text.Calibration:00000000 $t
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:130    .text.Calibration:00000000 Calibration
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:191    .text.Calibration:00000038 $d
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:196    .text.EnableADC:00000000 $t
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:202    .text.EnableADC:00000000 EnableADC
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:248    .text.EnableADC:00000028 $d
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:253    .text.SetLEDSByADC:00000000 $t
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:259    .text.SetLEDSByADC:00000000 SetLEDSByADC
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:400    .text.SetLEDSByADC:000000ac $d
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:406    .text._Error_Handler:00000000 $t
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:412    .text._Error_Handler:00000000 _Error_Handler
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:430    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:435    .text.SystemClock_Config:00000000 $t
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:441    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:544    .text.SystemClock_Config:0000006c $d
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:549    .text.main:00000000 $t
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:555    .text.main:00000000 main
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:709    .text.main:000000ac $d
/var/folders/p5/kmhjbybn0dlg720ptw11fhww0000gn/T//ccWhQbW0.s:719    .rodata:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_GPIO_WritePin
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
